name: Build and Release

on:
  release:
    types: [published]

permissions:
  contents: write
  packages: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Make build script executable
      run: chmod +x build.sh
      
    - name: Build project
      run: ./build.sh
      
    - name: Verify build output amd64
      run: |
        if [ ! -f "bin/Release/net9.0/linux-amd64/Aesir" ]; then
          echo "Build output not found!"
          exit 1
        fi
        ls -la bin/Release/net9.0/linux-amd64/

    - name: Verify build output arm64
      run: |
        if [ ! -f "bin/Release/net9.0/linux-arm64/Aesir" ]; then
          echo "Build output not found!"
          exit 1
        fi
        ls -la bin/Release/net9.0/linux-arm64/
        
    - name: Get version from release
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
    - name: Read CHANGELOG.md
      id: changelog
      run: |
        CHANGELOG=$(cat CHANGELOG.md)
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Upload release asset amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: bin/Release/net9.0/publish/linux-amd64/Aesir
        asset_name: Aesir-amd64-v${{ steps.get_version.outputs.VERSION }}
        asset_content_type: application/octet-stream
    
    - name: Upload release asset arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: bin/Release/net9.0/publish/linux-arm64/Aesir
        asset_name: Aesir-arm64-v${{ steps.get_version.outputs.VERSION }}
        asset_content_type: application/octet-stream
        
    - name: Update release description
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const changelog = `${{ steps.changelog.outputs.changelog }}`;
          
          await github.rest.repos.updateRelease({
            name : `v${{ steps.get_version.outputs.VERSION }}`,
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: context.payload.release.id,
            body: changelog || 'No changelog available'
          });
